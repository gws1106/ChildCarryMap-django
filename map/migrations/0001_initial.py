# Generated by Django 3.2.18 on 2023-07-26 08:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('convid', models.TextField(blank=True, null=True)),
                ('convname', models.TextField(blank=True, null=True)),
                ('convsido', models.TextField(blank=True, null=True)),
                ('convsigngu', models.TextField(blank=True, null=True)),
                ('convdong', models.TextField(blank=True, null=True)),
                ('convdongcode', models.TextField(blank=True, null=True)),
                ('convlo', models.FloatField(blank=True, null=True)),
                ('convla', models.FloatField(blank=True, null=True)),
                ('convtype', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'conv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Medi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mediid', models.TextField(blank=True, null=True)),
                ('mediname', models.TextField(blank=True, null=True)),
                ('medisido', models.TextField(blank=True, null=True)),
                ('medisigngu', models.TextField(blank=True, null=True)),
                ('medidong', models.TextField(blank=True, null=True)),
                ('medidongcode', models.TextField(blank=True, null=True)),
                ('medilo', models.FloatField(blank=True, null=True)),
                ('medila', models.FloatField(blank=True, null=True)),
                ('meditype', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'medi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parkingid', models.TextField(blank=True, null=True)),
                ('parkingname', models.TextField(blank=True, null=True)),
                ('parkingsido', models.TextField(blank=True, null=True)),
                ('parkingsigngu', models.TextField(blank=True, null=True)),
                ('parkingdongcode', models.TextField(blank=True, null=True)),
                ('parkingdong', models.TextField(blank=True, null=True)),
                ('parkingaddrnew', models.TextField(blank=True, null=True)),
                ('parkinglo', models.FloatField(blank=True, null=True)),
                ('parkingla', models.FloatField(blank=True, null=True)),
                ('parkingtype', models.TextField(blank=True, null=True)),
                ('parkingspceco', models.IntegerField(blank=True, null=True)),
                ('parkingutiliizalmttflagnm', models.TextField(blank=True, null=True)),
                ('parkingwkdaynm', models.TextField(blank=True, null=True)),
                ('parkingworkdayopnbsnstime', models.TextField(blank=True, null=True)),
                ('parkingworkdayclostime', models.TextField(blank=True, null=True)),
                ('parkingsatopnbsnstime', models.TextField(blank=True, null=True)),
                ('parkingsatclostime', models.TextField(blank=True, null=True)),
                ('parkingsunopnbsnstime', models.TextField(blank=True, null=True)),
                ('parkingsunclostime', models.TextField(blank=True, null=True)),
                ('parkingutiliizachrgecn', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'parking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Safe112',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('safe112id', models.TextField(blank=True, null=True)),
                ('safe112subtype', models.TextField(blank=True, null=True)),
                ('safe112name', models.TextField(blank=True, null=True)),
                ('safe112sido', models.TextField(blank=True, null=True)),
                ('safe112signgu', models.TextField(blank=True, null=True)),
                ('safe112dongcode', models.TextField(blank=True, null=True)),
                ('safe112dong', models.TextField(blank=True, null=True)),
                ('safe112lo', models.FloatField(blank=True, null=True)),
                ('safe112la', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'safe112',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Safe119',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('safe119id', models.TextField(blank=True, null=True)),
                ('safe119name', models.TextField(blank=True, null=True)),
                ('safe119subtype', models.TextField(blank=True, null=True)),
                ('safe119lo', models.FloatField(blank=True, null=True)),
                ('safe119la', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'safe119',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Toilet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('toiletid', models.TextField(blank=True, null=True)),
                ('toiletname', models.TextField(blank=True, null=True)),
                ('toiletsido', models.TextField(blank=True, null=True)),
                ('toiletsigngu', models.TextField(blank=True, null=True)),
                ('toiletdongcode', models.TextField(blank=True, null=True)),
                ('toiletdong', models.TextField(blank=True, null=True)),
                ('toiletaddrnew', models.TextField(blank=True, null=True)),
                ('toiletaddrold', models.TextField(blank=True, null=True)),
                ('toiletla', models.FloatField(blank=True, null=True)),
                ('toiletlo', models.FloatField(blank=True, null=True)),
                ('toilettype', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'toilet',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Waterplay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('waterplayname', models.TextField(blank=True, null=True)),
                ('waterplayimgurl', models.TextField(blank=True, null=True)),
                ('waterplayaddrold', models.TextField(blank=True, null=True)),
                ('waterplayaddrnew', models.TextField(blank=True, null=True)),
                ('waterplaytelno', models.TextField(blank=True, null=True)),
                ('waterplayurl', models.TextField(blank=True, null=True)),
                ('waterplayname01', models.TextField(blank=True, null=True)),
                ('waterplayvalue01', models.TextField(blank=True, null=True)),
                ('waterplayname02', models.TextField(blank=True, null=True)),
                ('waterplayvalue02', models.TextField(blank=True, null=True)),
                ('waterplayname03', models.TextField(blank=True, null=True)),
                ('waterplayvalue03', models.TextField(blank=True, null=True)),
                ('waterplayname04', models.TextField(blank=True, null=True)),
                ('waterplayvalue04', models.TextField(blank=True, null=True)),
                ('waterplayname05', models.TextField(blank=True, null=True)),
                ('waterplayvalue05', models.TextField(blank=True, null=True)),
                ('waterplayname06', models.TextField(blank=True, null=True)),
                ('waterplayvalue06', models.TextField(blank=True, null=True)),
                ('waterplayname07', models.TextField(blank=True, null=True)),
                ('waterplayvalue07', models.TextField(blank=True, null=True)),
                ('waterplaytypeid', models.IntegerField(blank=True, null=True)),
                ('waterplaytype', models.TextField(blank=True, null=True)),
                ('waterplayla', models.FloatField(blank=True, null=True)),
                ('waterplaylo', models.FloatField(blank=True, null=True)),
                ('waterplayscoretoilet', models.FloatField(blank=True, null=True)),
                ('waterplayscoreconv', models.FloatField(blank=True, null=True)),
                ('waterplayscoredrug', models.FloatField(blank=True, null=True)),
                ('waterplayscoremedi', models.FloatField(blank=True, null=True)),
                ('waterplayscoresafe112', models.FloatField(blank=True, null=True)),
                ('waterplayscoresafe119', models.FloatField(blank=True, null=True)),
                ('waterplayscoreparking', models.FloatField(blank=True, null=True)),
                ('waterplayscorefaci', models.FloatField(blank=True, null=True)),
                ('waterplayscorefacidesc', models.TextField(blank=True, null=True)),
                ('water', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'waterplay',
                'managed': False,
            },
        ),
    ]
